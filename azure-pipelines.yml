# azure-pipelines.yml
trigger:
  branches:
    include:
      - '*'  # Executa o pipeline em todos os branches, pode ser ajustado para 'main' ou outro branch específico.

pool:
  vmImage: 'ubuntu-latest'  # Define a VM que será usada para execução

steps:
  # Passo para realizar o checkout do código do GitHub
  - checkout: self

  # Instala o JDK 11 (pode ser ajustado conforme necessário)
  - task: UseJavaVersion@1
    inputs:
      versionSpec: '11'  # Use a versão do JDK que seu projeto exige
      jdkArchitectureOption: 'x64'

  # Tarefa de build usando Maven
  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'  # Local do arquivo POM no projeto
      goals: 'clean install'   # Comandos Maven para compilar e rodar os testes
      options: '-B'            # Batch mode para menos mensagens interativas
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'  # Relatórios de testes

  # Relatório de cobertura de código com JaCoCo (para Maven)
  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'JaCoCo'  # Usa JaCoCo para cobertura de código
      summaryFileLocation: 'target/site/jacoco/jacoco.xml'
      reportDirectory: 'target/site/jacoco'
      failIfCoverageEmpty: true   # Falha se a cobertura estiver vazia

